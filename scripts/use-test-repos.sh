#!/bin/bash

# Guide for using test repositories generated by advanced-test-framework.sh
# This script shows how to use the generated repos with muno (rc)

set -e

# Configuration
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
PROJECT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
MUNO_BIN="${MUNO_BIN:-$PROJECT_DIR/bin/muno}"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

echo -e "${MAGENTA}╔════════════════════════════════════════════════╗${NC}"
echo -e "${MAGENTA}║    How to Use Generated Test Repositories     ║${NC}"
echo -e "${MAGENTA}╚════════════════════════════════════════════════╝${NC}"
echo

# Function to show usage options
show_usage_options() {
    local test_dir="$1"
    
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${CYAN}OPTION 1: Use Pre-Created Workspace${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo
    echo "The test framework already created an muno workspace for you."
    echo "Navigate to it and start using muno commands:"
    echo
    echo -e "${GREEN}cd $test_dir/rc-workspace/microservices-test${NC}"
    echo -e "${GREEN}$MUNO_BIN tree${NC}                  # View repository tree"
    echo -e "${GREEN}$MUNO_BIN use auth${NC}              # Navigate to auth service"
    echo -e "${GREEN}$MUNO_BIN clone --recursive${NC}     # Clone all lazy repos"
    echo -e "${GREEN}$MUNO_BIN status${NC}                # Check status"
    echo
    
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${CYAN}OPTION 2: Create New Workspace from Scratch${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo
    echo "Create a fresh workspace and add repos manually:"
    echo
    echo -e "${GREEN}# 1. Create new workspace${NC}"
    echo -e "mkdir ~/my-workspace"
    echo -e "cd ~/my-workspace"
    echo -e "$MUNO_BIN init my-project"
    echo -e "cd my-project"
    echo
    echo -e "${GREEN}# 2. Add repositories from test scenario${NC}"
    echo -e "$MUNO_BIN add file://$test_dir/auth-service --name auth"
    echo -e "$MUNO_BIN add file://$test_dir/user-service --name users"
    echo -e "$MUNO_BIN add file://$test_dir/payment-service --name payments --lazy"
    echo -e "$MUNO_BIN add file://$test_dir/common-lib --name common"
    echo
    echo -e "${GREEN}# 3. View and navigate${NC}"
    echo -e "$MUNO_BIN tree"
    echo -e "$MUNO_BIN use auth"
    echo
    
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${CYAN}OPTION 3: Bulk Import Using Config File${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo
    echo "Use the generated test-config.yaml for bulk import:"
    echo
    echo -e "${GREEN}# 1. Check if config exists${NC}"
    if [ -f "$test_dir/test-config.yaml" ]; then
        echo -e "Config found: ${YELLOW}$test_dir/test-config.yaml${NC}"
        echo
        echo -e "${GREEN}# 2. Create workspace with config${NC}"
        echo -e "mkdir ~/bulk-workspace"
        echo -e "cd ~/bulk-workspace"
        echo -e "$MUNO_BIN init my-bulk-project"
        echo -e "cd my-bulk-project"
        echo
        echo -e "${GREEN}# 3. Manually add repos from config (muno doesn't support bulk import yet)${NC}"
        echo "Parse the config and add each repo:"
        echo -e "cat $test_dir/test-config.yaml | grep 'url:' | while read line; do"
        echo -e "  # Extract URL and add to workspace"
        echo -e "  # This would need custom scripting"
        echo -e "done"
    else
        echo -e "${YELLOW}No test-config.yaml found for this scenario${NC}"
    fi
    echo
    
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${CYAN}OPTION 4: Create Nested Tree Structure${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo
    echo "Organize repos in a tree structure:"
    echo
    echo -e "${GREEN}# 1. Initialize workspace${NC}"
    echo -e "cd /tmp/my-tree-workspace"
    echo -e "$MUNO_BIN init microservices-platform"
    echo -e "cd microservices-platform"
    echo
    echo -e "${GREEN}# 2. Add libraries at root${NC}"
    echo -e "$MUNO_BIN add file://$test_dir/common-lib --name common"
    echo -e "$MUNO_BIN add file://$test_dir/proto-lib --name proto"
    echo
    echo -e "${GREEN}# 3. Navigate and add services as children${NC}"
    echo -e "$MUNO_BIN use common"
    echo -e "$MUNO_BIN add file://$test_dir/auth-service --name auth"
    echo -e "$MUNO_BIN add file://$test_dir/user-service --name users"
    echo
    echo -e "${GREEN}# 4. View the tree${NC}"
    echo -e "$MUNO_BIN use /"
    echo -e "$MUNO_BIN tree"
    echo
    echo "Expected structure:"
    echo "  /"
    echo "  ├── common/"
    echo "  │   ├── auth/"
    echo "  │   └── users/"
    echo "  └── proto/"
    echo
}

# Function to demonstrate actual usage
demonstrate_usage() {
    local test_dir="$1"
    local workspace="$test_dir/demo-workspace"
    
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${CYAN}LIVE DEMONSTRATION${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo
    
    # Create demo workspace
    mkdir -p "$workspace"
    cd "$workspace"
    
    echo -e "${BLUE}Step 1: Initialize new workspace${NC}"
    echo -e "  ${GREEN}$MUNO_BIN init demo-project${NC}"
    if $MUNO_BIN init demo-project >/dev/null 2>&1; then
        echo -e "  ${GREEN}✓ Workspace initialized${NC}"
    else
        echo -e "  ${YELLOW}⚠ Init failed (muno may not be built)${NC}"
        return 1
    fi
    
    cd demo-project
    
    echo
    echo -e "${BLUE}Step 2: Add some test repositories${NC}"
    
    # Add repos if they exist
    if [ -d "$test_dir/auth-service/.git" ]; then
        echo -e "  ${GREEN}$MUNO_BIN add file://$test_dir/auth-service --name auth${NC}"
        $MUNO_BIN add "file://$test_dir/auth-service" --name auth 2>/dev/null || true
    fi
    
    if [ -d "$test_dir/common-lib/.git" ]; then
        echo -e "  ${GREEN}$MUNO_BIN add file://$test_dir/common-lib --name common${NC}"
        $MUNO_BIN add "file://$test_dir/common-lib" --name common 2>/dev/null || true
    fi
    
    echo
    echo -e "${BLUE}Step 3: View the tree${NC}"
    echo -e "  ${GREEN}$MUNO_BIN tree${NC}"
    $MUNO_BIN tree 2>/dev/null || echo -e "  ${YELLOW}Tree command failed${NC}"
    
    echo
    echo -e "${BLUE}Step 4: Navigate to a repository${NC}"
    echo -e "  ${GREEN}$MUNO_BIN use auth${NC}"
    $MUNO_BIN use auth 2>/dev/null || echo -e "  ${YELLOW}Navigation failed${NC}"
    
    echo
    echo -e "${GREEN}Demo workspace created at: $workspace/demo-project${NC}"
}

# Main execution
main() {
    # Check if muno binary exists
    if [ ! -f "$MUNO_BIN" ]; then
        echo -e "${RED}Error: muno binary not found at $MUNO_BIN${NC}"
        echo "Please build it first: make build"
        echo
        echo "However, here's how you WOULD use the test repos once muno is built:"
        echo
    fi
    
    # Find most recent test directory
    if [ -n "${1:-}" ]; then
        # User provided a test directory
        TEST_DIR="$1"
    else
        # Try to find the most recent test
        TEST_DIR=$(find /tmp -name "rc-advanced-test" -type d 2>/dev/null | head -1)
        if [ -z "$TEST_DIR" ]; then
            TEST_DIR="/tmp/rc-advanced-test/single-example"
        fi
    fi
    
    echo -e "${YELLOW}Using test directory: $TEST_DIR${NC}"
    echo
    
    # Check if microservices scenario exists
    if [ -d "$TEST_DIR/microservices" ]; then
        show_usage_options "$TEST_DIR/microservices"
        
        # Optionally run demo
        echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
        echo -e "${CYAN}Want to see a live demo? (requires muno binary)${NC}"
        echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
        echo
        echo -e "Run: ${GREEN}$0 $TEST_DIR/microservices --demo${NC}"
        
        if [ "${2:-}" = "--demo" ] && [ -f "$MUNO_BIN" ]; then
            echo
            demonstrate_usage "$TEST_DIR/microservices"
        fi
    else
        echo -e "${YELLOW}No microservices test scenario found.${NC}"
        echo -e "${YELLOW}First run: ./scripts/advanced-test-framework.sh microservices${NC}"
    fi
    
    echo
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${CYAN}KEY CONCEPTS${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo
    echo "1. ${YELLOW}Tree-based navigation${NC}: Repos form a tree, navigate with 'use'"
    echo "2. ${YELLOW}Lazy loading${NC}: Repos marked --lazy clone on first navigation"
    echo "3. ${YELLOW}CWD-first resolution${NC}: Commands operate on current position"
    echo "4. ${YELLOW}file:// URLs${NC}: Use for local test repositories"
    echo "5. ${YELLOW}No recursion needed${NC}: muno handles the tree structure internally"
    echo
    echo -e "${GREEN}✅ Guide complete!${NC}"
}

# Parse arguments
case "${1:-}" in
    --help|-h)
        echo "Usage: $0 [test-directory] [--demo]"
        echo
        echo "Shows how to use test repositories generated by advanced-test-framework.sh"
        echo
        echo "Arguments:"
        echo "  test-directory    Path to test directory (default: auto-detect)"
        echo "  --demo           Run live demonstration"
        ;;
    *)
        main "$@"
        ;;
esac